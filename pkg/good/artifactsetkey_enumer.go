// Code generated by "enumer --json --linecomment --type=ArtifactSetKey keys_gen.go"; DO NOT EDIT.

package good

import (
	"encoding/json"
	"fmt"
	"strings"
)

const (
	_ArtifactSetKeyName_0      = ""
	_ArtifactSetKeyLowerName_0 = ""
	_ArtifactSetKeyName_1      = "ResolutionOfSojournerBraveHeartDefendersWillTinyMiracleBerserkerMartialArtistInstructorGamblerTheExileAdventurerLuckyDogScholarTravelingDoctor"
	_ArtifactSetKeyLowerName_1 = "resolutionofsojournerbraveheartdefenderswilltinymiracleberserkermartialartistinstructorgamblertheexileadventurerluckydogscholartravelingdoctor"
	_ArtifactSetKeyName_2      = "BlizzardStrayerThundersootherLavawalkerMaidenBeloved"
	_ArtifactSetKeyLowerName_2 = "blizzardstrayerthundersootherlavawalkermaidenbeloved"
	_ArtifactSetKeyName_3      = "GladiatorsFinaleViridescentVenererWanderersTroupe"
	_ArtifactSetKeyLowerName_3 = "gladiatorsfinaleviridescentvenererwandererstroupe"
	_ArtifactSetKeyName_4      = "ThunderingFuryCrimsonWitchOfFlamesNoblesseObligeBloodstainedChivalryPrayersForIlluminationPrayersForDestinyPrayersForWisdom"
	_ArtifactSetKeyLowerName_4 = "thunderingfurycrimsonwitchofflamesnoblesseobligebloodstainedchivalryprayersforilluminationprayersfordestinyprayersforwisdom"
	_ArtifactSetKeyName_5      = "PrayersToSpringtimeArchaicPetraRetracingBolideHeartOfDepthTenacityOfTheMillelithPaleFlameShimenawasReminiscenceEmblemOfSeveredFateHuskOfOpulentDreamsOceanHuedClamVermillionHereafterEchoesOfAnOfferingDeepwoodMemoriesGildedDreamsDesertPavilionChronicleFlowerOfParadiseLostNymphsDreamVourukashasGlowMarechausseeHunterGoldenTroupeSongOfDaysPastNighttimeWhispersInTheEchoingWoodsFragmentOfHarmonicWhimsyUnfinishedReverie"
	_ArtifactSetKeyLowerName_5 = "prayerstospringtimearchaicpetraretracingbolideheartofdepthtenacityofthemillelithpaleflameshimenawasreminiscenceemblemofseveredfatehuskofopulentdreamsoceanhuedclamvermillionhereafterechoesofanofferingdeepwoodmemoriesgildeddreamsdesertpavilionchronicleflowerofparadiselostnymphsdreamvourukashasglowmarechausseehuntergoldentroupesongofdayspastnighttimewhispersintheechoingwoodsfragmentofharmonicwhimsyunfinishedreverie"
)

var (
	_ArtifactSetKeyIndex_0 = [...]uint8{0, 0}
	_ArtifactSetKeyIndex_1 = [...]uint8{0, 21, 31, 44, 55, 64, 77, 87, 94, 102, 112, 120, 127, 142}
	_ArtifactSetKeyIndex_2 = [...]uint8{0, 15, 29, 39, 52}
	_ArtifactSetKeyIndex_3 = [...]uint8{0, 16, 34, 49}
	_ArtifactSetKeyIndex_4 = [...]uint8{0, 14, 34, 48, 68, 90, 107, 123}
	_ArtifactSetKeyIndex_5 = [...]uint16{0, 19, 31, 46, 58, 80, 89, 111, 130, 149, 162, 181, 199, 215, 227, 250, 270, 281, 296, 314, 326, 340, 374, 398, 415}
)

func (i ArtifactSetKey) String() string {
	switch {
	case i == 0:
		return _ArtifactSetKeyName_0
	case 10001 <= i && i <= 10013:
		i -= 10001
		return _ArtifactSetKeyName_1[_ArtifactSetKeyIndex_1[i]:_ArtifactSetKeyIndex_1[i+1]]
	case 14001 <= i && i <= 14004:
		i -= 14001
		return _ArtifactSetKeyName_2[_ArtifactSetKeyIndex_2[i]:_ArtifactSetKeyIndex_2[i+1]]
	case 15001 <= i && i <= 15003:
		i -= 15001
		return _ArtifactSetKeyName_3[_ArtifactSetKeyIndex_3[i]:_ArtifactSetKeyIndex_3[i+1]]
	case 15005 <= i && i <= 15011:
		i -= 15005
		return _ArtifactSetKeyName_4[_ArtifactSetKeyIndex_4[i]:_ArtifactSetKeyIndex_4[i+1]]
	case 15013 <= i && i <= 15036:
		i -= 15013
		return _ArtifactSetKeyName_5[_ArtifactSetKeyIndex_5[i]:_ArtifactSetKeyIndex_5[i+1]]
	default:
		return fmt.Sprintf("ArtifactSetKey(%d)", i)
	}
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ArtifactSetKeyNoOp() {
	var x [1]struct{}
	_ = x[UnknownArtifactSetKey-(0)]
	_ = x[ResolutionOfSojourner-(10001)]
	_ = x[BraveHeart-(10002)]
	_ = x[DefendersWill-(10003)]
	_ = x[TinyMiracle-(10004)]
	_ = x[Berserker-(10005)]
	_ = x[MartialArtist-(10006)]
	_ = x[Instructor-(10007)]
	_ = x[Gambler-(10008)]
	_ = x[TheExile-(10009)]
	_ = x[Adventurer-(10010)]
	_ = x[LuckyDog-(10011)]
	_ = x[Scholar-(10012)]
	_ = x[TravelingDoctor-(10013)]
	_ = x[BlizzardStrayer-(14001)]
	_ = x[Thundersoother-(14002)]
	_ = x[Lavawalker-(14003)]
	_ = x[MaidenBeloved-(14004)]
	_ = x[GladiatorsFinale-(15001)]
	_ = x[ViridescentVenerer-(15002)]
	_ = x[WanderersTroupe-(15003)]
	_ = x[ThunderingFury-(15005)]
	_ = x[CrimsonWitchOfFlames-(15006)]
	_ = x[NoblesseOblige-(15007)]
	_ = x[BloodstainedChivalry-(15008)]
	_ = x[PrayersForIllumination-(15009)]
	_ = x[PrayersForDestiny-(15010)]
	_ = x[PrayersForWisdom-(15011)]
	_ = x[PrayersToSpringtime-(15013)]
	_ = x[ArchaicPetra-(15014)]
	_ = x[RetracingBolide-(15015)]
	_ = x[HeartOfDepth-(15016)]
	_ = x[TenacityOfTheMillelith-(15017)]
	_ = x[PaleFlame-(15018)]
	_ = x[ShimenawasReminiscence-(15019)]
	_ = x[EmblemOfSeveredFate-(15020)]
	_ = x[HuskOfOpulentDreams-(15021)]
	_ = x[OceanHuedClam-(15022)]
	_ = x[VermillionHereafter-(15023)]
	_ = x[EchoesOfAnOffering-(15024)]
	_ = x[DeepwoodMemories-(15025)]
	_ = x[GildedDreams-(15026)]
	_ = x[DesertPavilionChronicle-(15027)]
	_ = x[FlowerOfParadiseLost-(15028)]
	_ = x[NymphsDream-(15029)]
	_ = x[VourukashasGlow-(15030)]
	_ = x[MarechausseeHunter-(15031)]
	_ = x[GoldenTroupe-(15032)]
	_ = x[SongOfDaysPast-(15033)]
	_ = x[NighttimeWhispersInTheEchoingWoods-(15034)]
	_ = x[FragmentOfHarmonicWhimsy-(15035)]
	_ = x[UnfinishedReverie-(15036)]
}

var _ArtifactSetKeyValues = []ArtifactSetKey{UnknownArtifactSetKey, ResolutionOfSojourner, BraveHeart, DefendersWill, TinyMiracle, Berserker, MartialArtist, Instructor, Gambler, TheExile, Adventurer, LuckyDog, Scholar, TravelingDoctor, BlizzardStrayer, Thundersoother, Lavawalker, MaidenBeloved, GladiatorsFinale, ViridescentVenerer, WanderersTroupe, ThunderingFury, CrimsonWitchOfFlames, NoblesseOblige, BloodstainedChivalry, PrayersForIllumination, PrayersForDestiny, PrayersForWisdom, PrayersToSpringtime, ArchaicPetra, RetracingBolide, HeartOfDepth, TenacityOfTheMillelith, PaleFlame, ShimenawasReminiscence, EmblemOfSeveredFate, HuskOfOpulentDreams, OceanHuedClam, VermillionHereafter, EchoesOfAnOffering, DeepwoodMemories, GildedDreams, DesertPavilionChronicle, FlowerOfParadiseLost, NymphsDream, VourukashasGlow, MarechausseeHunter, GoldenTroupe, SongOfDaysPast, NighttimeWhispersInTheEchoingWoods, FragmentOfHarmonicWhimsy, UnfinishedReverie}

var _ArtifactSetKeyNameToValueMap = map[string]ArtifactSetKey{
	_ArtifactSetKeyName_0[0:0]:          UnknownArtifactSetKey,
	_ArtifactSetKeyLowerName_0[0:0]:     UnknownArtifactSetKey,
	_ArtifactSetKeyName_1[0:21]:         ResolutionOfSojourner,
	_ArtifactSetKeyLowerName_1[0:21]:    ResolutionOfSojourner,
	_ArtifactSetKeyName_1[21:31]:        BraveHeart,
	_ArtifactSetKeyLowerName_1[21:31]:   BraveHeart,
	_ArtifactSetKeyName_1[31:44]:        DefendersWill,
	_ArtifactSetKeyLowerName_1[31:44]:   DefendersWill,
	_ArtifactSetKeyName_1[44:55]:        TinyMiracle,
	_ArtifactSetKeyLowerName_1[44:55]:   TinyMiracle,
	_ArtifactSetKeyName_1[55:64]:        Berserker,
	_ArtifactSetKeyLowerName_1[55:64]:   Berserker,
	_ArtifactSetKeyName_1[64:77]:        MartialArtist,
	_ArtifactSetKeyLowerName_1[64:77]:   MartialArtist,
	_ArtifactSetKeyName_1[77:87]:        Instructor,
	_ArtifactSetKeyLowerName_1[77:87]:   Instructor,
	_ArtifactSetKeyName_1[87:94]:        Gambler,
	_ArtifactSetKeyLowerName_1[87:94]:   Gambler,
	_ArtifactSetKeyName_1[94:102]:       TheExile,
	_ArtifactSetKeyLowerName_1[94:102]:  TheExile,
	_ArtifactSetKeyName_1[102:112]:      Adventurer,
	_ArtifactSetKeyLowerName_1[102:112]: Adventurer,
	_ArtifactSetKeyName_1[112:120]:      LuckyDog,
	_ArtifactSetKeyLowerName_1[112:120]: LuckyDog,
	_ArtifactSetKeyName_1[120:127]:      Scholar,
	_ArtifactSetKeyLowerName_1[120:127]: Scholar,
	_ArtifactSetKeyName_1[127:142]:      TravelingDoctor,
	_ArtifactSetKeyLowerName_1[127:142]: TravelingDoctor,
	_ArtifactSetKeyName_2[0:15]:         BlizzardStrayer,
	_ArtifactSetKeyLowerName_2[0:15]:    BlizzardStrayer,
	_ArtifactSetKeyName_2[15:29]:        Thundersoother,
	_ArtifactSetKeyLowerName_2[15:29]:   Thundersoother,
	_ArtifactSetKeyName_2[29:39]:        Lavawalker,
	_ArtifactSetKeyLowerName_2[29:39]:   Lavawalker,
	_ArtifactSetKeyName_2[39:52]:        MaidenBeloved,
	_ArtifactSetKeyLowerName_2[39:52]:   MaidenBeloved,
	_ArtifactSetKeyName_3[0:16]:         GladiatorsFinale,
	_ArtifactSetKeyLowerName_3[0:16]:    GladiatorsFinale,
	_ArtifactSetKeyName_3[16:34]:        ViridescentVenerer,
	_ArtifactSetKeyLowerName_3[16:34]:   ViridescentVenerer,
	_ArtifactSetKeyName_3[34:49]:        WanderersTroupe,
	_ArtifactSetKeyLowerName_3[34:49]:   WanderersTroupe,
	_ArtifactSetKeyName_4[0:14]:         ThunderingFury,
	_ArtifactSetKeyLowerName_4[0:14]:    ThunderingFury,
	_ArtifactSetKeyName_4[14:34]:        CrimsonWitchOfFlames,
	_ArtifactSetKeyLowerName_4[14:34]:   CrimsonWitchOfFlames,
	_ArtifactSetKeyName_4[34:48]:        NoblesseOblige,
	_ArtifactSetKeyLowerName_4[34:48]:   NoblesseOblige,
	_ArtifactSetKeyName_4[48:68]:        BloodstainedChivalry,
	_ArtifactSetKeyLowerName_4[48:68]:   BloodstainedChivalry,
	_ArtifactSetKeyName_4[68:90]:        PrayersForIllumination,
	_ArtifactSetKeyLowerName_4[68:90]:   PrayersForIllumination,
	_ArtifactSetKeyName_4[90:107]:       PrayersForDestiny,
	_ArtifactSetKeyLowerName_4[90:107]:  PrayersForDestiny,
	_ArtifactSetKeyName_4[107:123]:      PrayersForWisdom,
	_ArtifactSetKeyLowerName_4[107:123]: PrayersForWisdom,
	_ArtifactSetKeyName_5[0:19]:         PrayersToSpringtime,
	_ArtifactSetKeyLowerName_5[0:19]:    PrayersToSpringtime,
	_ArtifactSetKeyName_5[19:31]:        ArchaicPetra,
	_ArtifactSetKeyLowerName_5[19:31]:   ArchaicPetra,
	_ArtifactSetKeyName_5[31:46]:        RetracingBolide,
	_ArtifactSetKeyLowerName_5[31:46]:   RetracingBolide,
	_ArtifactSetKeyName_5[46:58]:        HeartOfDepth,
	_ArtifactSetKeyLowerName_5[46:58]:   HeartOfDepth,
	_ArtifactSetKeyName_5[58:80]:        TenacityOfTheMillelith,
	_ArtifactSetKeyLowerName_5[58:80]:   TenacityOfTheMillelith,
	_ArtifactSetKeyName_5[80:89]:        PaleFlame,
	_ArtifactSetKeyLowerName_5[80:89]:   PaleFlame,
	_ArtifactSetKeyName_5[89:111]:       ShimenawasReminiscence,
	_ArtifactSetKeyLowerName_5[89:111]:  ShimenawasReminiscence,
	_ArtifactSetKeyName_5[111:130]:      EmblemOfSeveredFate,
	_ArtifactSetKeyLowerName_5[111:130]: EmblemOfSeveredFate,
	_ArtifactSetKeyName_5[130:149]:      HuskOfOpulentDreams,
	_ArtifactSetKeyLowerName_5[130:149]: HuskOfOpulentDreams,
	_ArtifactSetKeyName_5[149:162]:      OceanHuedClam,
	_ArtifactSetKeyLowerName_5[149:162]: OceanHuedClam,
	_ArtifactSetKeyName_5[162:181]:      VermillionHereafter,
	_ArtifactSetKeyLowerName_5[162:181]: VermillionHereafter,
	_ArtifactSetKeyName_5[181:199]:      EchoesOfAnOffering,
	_ArtifactSetKeyLowerName_5[181:199]: EchoesOfAnOffering,
	_ArtifactSetKeyName_5[199:215]:      DeepwoodMemories,
	_ArtifactSetKeyLowerName_5[199:215]: DeepwoodMemories,
	_ArtifactSetKeyName_5[215:227]:      GildedDreams,
	_ArtifactSetKeyLowerName_5[215:227]: GildedDreams,
	_ArtifactSetKeyName_5[227:250]:      DesertPavilionChronicle,
	_ArtifactSetKeyLowerName_5[227:250]: DesertPavilionChronicle,
	_ArtifactSetKeyName_5[250:270]:      FlowerOfParadiseLost,
	_ArtifactSetKeyLowerName_5[250:270]: FlowerOfParadiseLost,
	_ArtifactSetKeyName_5[270:281]:      NymphsDream,
	_ArtifactSetKeyLowerName_5[270:281]: NymphsDream,
	_ArtifactSetKeyName_5[281:296]:      VourukashasGlow,
	_ArtifactSetKeyLowerName_5[281:296]: VourukashasGlow,
	_ArtifactSetKeyName_5[296:314]:      MarechausseeHunter,
	_ArtifactSetKeyLowerName_5[296:314]: MarechausseeHunter,
	_ArtifactSetKeyName_5[314:326]:      GoldenTroupe,
	_ArtifactSetKeyLowerName_5[314:326]: GoldenTroupe,
	_ArtifactSetKeyName_5[326:340]:      SongOfDaysPast,
	_ArtifactSetKeyLowerName_5[326:340]: SongOfDaysPast,
	_ArtifactSetKeyName_5[340:374]:      NighttimeWhispersInTheEchoingWoods,
	_ArtifactSetKeyLowerName_5[340:374]: NighttimeWhispersInTheEchoingWoods,
	_ArtifactSetKeyName_5[374:398]:      FragmentOfHarmonicWhimsy,
	_ArtifactSetKeyLowerName_5[374:398]: FragmentOfHarmonicWhimsy,
	_ArtifactSetKeyName_5[398:415]:      UnfinishedReverie,
	_ArtifactSetKeyLowerName_5[398:415]: UnfinishedReverie,
}

var _ArtifactSetKeyNames = []string{
	_ArtifactSetKeyName_0[0:0],
	_ArtifactSetKeyName_1[0:21],
	_ArtifactSetKeyName_1[21:31],
	_ArtifactSetKeyName_1[31:44],
	_ArtifactSetKeyName_1[44:55],
	_ArtifactSetKeyName_1[55:64],
	_ArtifactSetKeyName_1[64:77],
	_ArtifactSetKeyName_1[77:87],
	_ArtifactSetKeyName_1[87:94],
	_ArtifactSetKeyName_1[94:102],
	_ArtifactSetKeyName_1[102:112],
	_ArtifactSetKeyName_1[112:120],
	_ArtifactSetKeyName_1[120:127],
	_ArtifactSetKeyName_1[127:142],
	_ArtifactSetKeyName_2[0:15],
	_ArtifactSetKeyName_2[15:29],
	_ArtifactSetKeyName_2[29:39],
	_ArtifactSetKeyName_2[39:52],
	_ArtifactSetKeyName_3[0:16],
	_ArtifactSetKeyName_3[16:34],
	_ArtifactSetKeyName_3[34:49],
	_ArtifactSetKeyName_4[0:14],
	_ArtifactSetKeyName_4[14:34],
	_ArtifactSetKeyName_4[34:48],
	_ArtifactSetKeyName_4[48:68],
	_ArtifactSetKeyName_4[68:90],
	_ArtifactSetKeyName_4[90:107],
	_ArtifactSetKeyName_4[107:123],
	_ArtifactSetKeyName_5[0:19],
	_ArtifactSetKeyName_5[19:31],
	_ArtifactSetKeyName_5[31:46],
	_ArtifactSetKeyName_5[46:58],
	_ArtifactSetKeyName_5[58:80],
	_ArtifactSetKeyName_5[80:89],
	_ArtifactSetKeyName_5[89:111],
	_ArtifactSetKeyName_5[111:130],
	_ArtifactSetKeyName_5[130:149],
	_ArtifactSetKeyName_5[149:162],
	_ArtifactSetKeyName_5[162:181],
	_ArtifactSetKeyName_5[181:199],
	_ArtifactSetKeyName_5[199:215],
	_ArtifactSetKeyName_5[215:227],
	_ArtifactSetKeyName_5[227:250],
	_ArtifactSetKeyName_5[250:270],
	_ArtifactSetKeyName_5[270:281],
	_ArtifactSetKeyName_5[281:296],
	_ArtifactSetKeyName_5[296:314],
	_ArtifactSetKeyName_5[314:326],
	_ArtifactSetKeyName_5[326:340],
	_ArtifactSetKeyName_5[340:374],
	_ArtifactSetKeyName_5[374:398],
	_ArtifactSetKeyName_5[398:415],
}

// ArtifactSetKeyString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ArtifactSetKeyString(s string) (ArtifactSetKey, error) {
	if val, ok := _ArtifactSetKeyNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ArtifactSetKeyNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ArtifactSetKey values", s)
}

// ArtifactSetKeyValues returns all values of the enum
func ArtifactSetKeyValues() []ArtifactSetKey {
	return _ArtifactSetKeyValues
}

// ArtifactSetKeyStrings returns a slice of all String values of the enum
func ArtifactSetKeyStrings() []string {
	strs := make([]string, len(_ArtifactSetKeyNames))
	copy(strs, _ArtifactSetKeyNames)
	return strs
}

// IsAArtifactSetKey returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ArtifactSetKey) IsAArtifactSetKey() bool {
	for _, v := range _ArtifactSetKeyValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for ArtifactSetKey
func (i ArtifactSetKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for ArtifactSetKey
func (i *ArtifactSetKey) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("ArtifactSetKey should be a string, got %s", data)
	}

	var err error
	*i, err = ArtifactSetKeyString(s)
	return err
}
